ARG ASPNET_IMAGE_TAG=6.0-bullseye-slim
ARG NODEJS_IMAGE_TAG=18.12-bullseye

# Stage 1 - Build frontend assets
FROM node:${NODEJS_IMAGE_TAG} as frontend
COPY ./Frontend/ /build/
WORKDIR /build/wwwroot
RUN npm install
RUN npm run build

# Stage 2 - Build project
FROM mcr.microsoft.com/dotnet/sdk:6.0 AS publish
WORKDIR /build

COPY ./Data/ ./Data/
COPY ./Data.TRAMS/ ./Data.TRAMS/
COPY ./Data.Mock/ ./Data.Mock/
COPY ./DocumentGeneration/ ./DocumentGeneration/
COPY ./Helpers/ ./Helpers/
COPY --from=frontend /build/ ./Frontend/

WORKDIR /build/Frontend
RUN dotnet restore
RUN dotnet publish -c Release -o /app --no-restore

# Stage 3 - Final
ARG ASPNET_IMAGE_TAG
FROM "mcr.microsoft.com/dotnet/aspnet:${ASPNET_IMAGE_TAG}" AS final
COPY --from=publish /app /app

WORKDIR /app
COPY ./script/web-docker-entrypoint.sh ./docker-entrypoint.sh
RUN chmod +x ./docker-entrypoint.sh
EXPOSE 80/tcp

@page "/project/{urn}/benefits/other-factors"
@model Dfe.PrepareTransfers.Web.Pages.Projects.BenefitsAndRisks.OtherFactors

@using Data.Models.Projects
@using Helpers
@using Microsoft.AspNetCore.Mvc.ModelBinding

@{
    ViewBag.Title = (!ViewData.ModelState.IsValid ? "Error: " : "") + "What are the risks with this transfer?";
    Layout = "_Layout";
    var formClasses = ViewData.ModelState.GetFieldValidationState(nameof(Model.OtherFactorsViewModel.OtherFactorsVm)) == ModelValidationState.Invalid ? "govuk-form-group--error" : "";
}

@section BeforeMain
{
    <backtopreview urn="@Model.Urn" return-to-preview="@Model.ReturnToPreview">
        <a class="govuk-back-link" asp-page="/Projects/BenefitsAndRisks/Index" asp-route-urn="@Model.Urn">Back</a>
    </backtopreview>
}

<div asp-gds-validation-summary></div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <form method="post" novalidate="">
            <input type="hidden" asp-for="@Model.Urn"/>
            <input type="hidden" asp-for="@Model.ReturnToPreview"/>
            <input type="hidden" asp-for="@Model.IncomingTrustName"/>
            <div class="govuk-form-group @formClasses">
                <fieldset class="govuk-fieldset" aria-describedby="waste-hint">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                        <h1 class="govuk-fieldset__heading">
                            <span class="govuk-caption-l">
                                @Model.IncomingTrustName
                            </span>
                            What are the risks with this transfer?
                        </h1>
                    </legend>
                    <div id="waste-hint" class="govuk-hint">
                        Select all that apply.
                    </div>

                    <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                        @for (var i = 0; i < Model.OtherFactorsViewModel.OtherFactorsVm.Count; i++)
                        {
                            var checkBox = Model.OtherFactorsViewModel.OtherFactorsVm[i];
                            var nameOrValue = i == 0 ? nameof(Model.OtherFactorsViewModel) : checkBox.OtherFactor.ToString();
                            <div class="govuk-checkboxes__item">
                                <input data-test="@checkBox.OtherFactor" asp-for="@Model.OtherFactorsViewModel.OtherFactorsVm[i].Checked" class="govuk-checkboxes__input" aria-controls="conditional-@Model.OtherFactorsViewModel.OtherFactorsVm[i].OtherFactor" aria-expanded="false">
                                <label id="@nameOrValue" class="govuk-label govuk-checkboxes__label" asp-for="@Model.OtherFactorsViewModel.OtherFactorsVm[i].Checked">
                                    @{
                                        var displayName = EnumHelpers<TransferBenefits.OtherFactor>.GetDisplayValue(@Model.OtherFactorsViewModel.OtherFactorsVm[i].OtherFactor);
                                        @displayName
                                    }
                                </label>
                            </div>
                            <input type="hidden" asp-for="@Model.OtherFactorsViewModel.OtherFactorsVm[i].OtherFactor"/>
                        }
                    </div>
                </fieldset>
            </div>
            <button class="govuk-button" data-module="govuk-button" type="submit">
                Save and continue
            </button>
        </form>
    </div>
</div>
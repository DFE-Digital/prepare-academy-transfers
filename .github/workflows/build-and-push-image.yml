name: Deploy to environment

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: "Choose an environment to deploy to"
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.environment }}

env:
  NODE_VERSION: 18.x

jobs:
  set-env:
    name: Determine environment
    runs-on: ubuntu-22.04
    outputs:
      environment: ${{ steps.var.outputs.environment }}
      branch: ${{ steps.var.outputs.branch }}
      release: ${{ steps.var.outputs.release }}
      checked-out-sha: ${{ steps.var.outputs.checked-out-sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: var
        run: |
          GIT_REF=${{ github.ref_name }}
          GIT_BRANCH=${GIT_REF##*/}
          INPUT=${{ github.event.inputs.environment }}
          ENVIRONMENT=${INPUT:-"dev"}
          RELEASE=${ENVIRONMENT,,}-`date +%Y-%m-%d`.${{ github.run_number }}
          CHECKED_OUT_SHA="$(git log -1 '--format=format:%H')"
          echo "environment=${ENVIRONMENT,,}" >> $GITHUB_OUTPUT
          echo "branch=$GIT_BRANCH" >> $GITHUB_OUTPUT
          echo "release=${RELEASE}" >> $GITHUB_OUTPUT
          echo "checked-out-sha=${CHECKED_OUT_SHA}" >> $GITHUB_OUTPUT

  deploy-image:
    name: Deploy '${{ needs.set-env.outputs.branch }}' to ${{ needs.set-env.outputs.environment }}
    needs: [ set-env ]
    uses: DFE-Digital/deploy-azure-container-apps-action/.github/workflows/build-push-deploy.yml@v2.2.0
    with:
      docker-image-name: 'acatran-app'
      docker-build-file-name: './Dockerfile'
      environment: ${{ needs.set-env.outputs.environment }}
      docker-build-args: |
        COMMIT_SHA="${{ needs.set-env.outputs.checked-out-sha }}"
    secrets:
      azure-acr-name: ${{ secrets.ACR_NAME }}
      azure-acr-credentials: ${{ secrets.ACR_CREDENTIALS }}
      azure-aca-credentials: ${{ secrets.AZURE_ACA_CREDENTIALS }}
      azure-aca-name: ${{ secrets.AZURE_ACA_NAME }}
      azure-aca-resource-group: ${{ secrets.AZURE_ACA_RESOURCE_GROUP }}

  create-tag:
    name: Tag and release
    needs: set-env
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Create tag
        run: |
          git tag ${{ needs.set-env.outputs.release }}
          git push origin ${{ needs.set-env.outputs.release }}

      - name: Create release
        uses: "actions/github-script@v7"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            try {
              await github.rest.repos.createRelease({
                draft: ${{ needs.set-env.outputs.environment == 'staging' }},
                generate_release_notes: true,
                name: "${{ needs.set-env.outputs.release }}",
                owner: context.repo.owner,
                prerelease: ${{ needs.set-env.outputs.environment == 'staging' }},
                repo: context.repo.repo,
                tag_name: "${{ needs.set-env.outputs.release }}",
              });
            } catch (error) {
              core.setFailed(error.message);
            }

  cypress-tests:
    name: Run Cypress Tests
    needs: [ set-env, deploy-image ]
    if: needs.set-env.outputs.environment == 'staging' || needs.set-env.outputs.environment == 'dev'
    uses: ./.github/workflows/cypress.yml
    with:
      environment: ${{ needs.set-env.outputs.environment }}
    secrets:
      AZURE_ENDPOINT: ${{ secrets.AZURE_ENDPOINT }}
      AUTH_HEADER_CYPRESS: ${{ secrets.AUTH_HEADER_CYPRESS }}
      CYPRESS_ACADEMISATION_API_URL: ${{ secrets.CYPRESS_ACADEMISATION_API_URL }}
      CYPRESS_ACADEMISATION_API_KEY: ${{ secrets.CYPRESS_ACADEMISATION_API_KEY }}
      DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

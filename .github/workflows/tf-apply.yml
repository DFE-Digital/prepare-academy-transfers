name: "Deploy to environment"

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment (staging, production)"
        required: true

env:
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

jobs:
  terraform-plan:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment}}
    defaults:
      run:
        working-directory: terraform
    steps:
      # Checkout the code
      # Marketplace: https://github.com/marketplace/actions/checkout
      - name: "Setup - Checkout"
        uses: actions/checkout@v2

      # Provides AWS credentials to Terraform
      # By default, Terraform checks the home directory for a .aws folder with a credential file
      # Documentation: https://docs.aws.amazon.com/ses/latest/DeveloperGuide/create-shared-credentials-file.html
      - name: "Setup - Build AWS Credentials"
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

      - name: Set environment variables
        run: |
          echo "DOCKER_IMAGE_TAG=$GITHUB_SHA" >> $GITHUB_ENV

      # Downloads a specific version of Terraform CLI and adds it to PATH
      # Marketplace: https://github.com/marketplace/actions/hashicorp-setup-terraform
      - name: "Setup - Terraform CLI"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.3

      - name: Set environment variables for environments
        run: |
          BACKEND_CONFIG='-backend-config="key=${{ github.event.inputs.environment }}/app.tfstate" -backend-config="bucket=${{ secrets.AWS_BUCKET_NAME }}"'
          PARAMETER_STORE_ENVIRONMENT=${{ github.event.inputs.environment }}
          VAR_FILE=${{ github.event.inputs.environment }}.tfvars
          echo "BACKEND_CONFIG=${BACKEND_CONFIG}" >> $GITHUB_ENV
          echo "PARAMETER_STORE_ENVIRONMENT=${PARAMETER_STORE_ENVIRONMENT}" >> $GITHUB_ENV
          echo "VAR_FILE=${VAR_FILE}" >> $GITHUB_ENV

      # Init pulls credentials from the .aws/credentials file by default
      - name: "Run - Terraform Init"
        run: terraform init -input=false ${{ env.BACKEND_CONFIG }}
        env:
          TF_VAR_cf_user: ${{ secrets.CF_USER }}
          TF_VAR_cf_password: ${{ secrets.CF_PASSWORD }}

      # The id value is used for reference in the comment step via "steps.plan.outputs.stdout"
      # Note: Color is disabled to prevent messy characters from appearing in the pull request comment
      - name: "Run - Terraform Apply"
        id: plan
        run: terraform apply -input=false -auto-approve -var-file=${{env.VAR_FILE}}
        env:
          TF_VAR_cf_user: ${{ secrets.CF_USER }}
          TF_VAR_cf_password: ${{ secrets.CF_PASSWORD }}
          TF_VAR_cf_api_url: https://api.london.cloud.service.gov.uk
          TF_VAR_app_trams_api_base: ${{ secrets.TRAMS_API_BASE }}
          TF_VAR_app_trams_api_key: ${{ secrets.TRAMS_API_KEY }}
          TF_VAR_app_azuread__clientsecret: ${{ secrets.AZUREAD_CLIENTSECRET }}
          TF_VAR_cf_app_image_tag: ${{ env.DOCKER_IMAGE_TAG }}
          TF_VAR_logit_sink_url: ${{ secrets.LOGIT_SINK_URL }}
          
name: End to end tests

on:
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  DOCKER_IMAGE: dfe-digital/academy-transfers-api

jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: checkout repository
        uses: actions/checkout@v2

      - name: Set environment variables
        run: |
          GIT_REF=${{ github.ref }}
          GIT_BRANCH=${GIT_REF##*/}
          echo "BRANCH_TAG=$GIT_BRANCH" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_TAG=$GITHUB_SHA" >> $GITHUB_ENV

      - name: setup node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: build frontend
        run: make build-frontend

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Wait for any in progress runs to finish
      - name: Turnstyle
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/dfe-digital/academy-transfers-api:e2e
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            COMMIT_SHA=${{ env.DOCKER_IMAGE_TAG }}

  run_tests:
    permissions:
      contents: read
      packages: read
    needs: build-image
    services:
      redis:
        image: redis
        ports:
          - 6379:6379

      web-app:
        image: ghcr.io/dfe-digital/academy-transfers-api:e2e
        ports:
          - 5000:5000
        env:
          CI: 'yes'
          ASPNETCORE_ENVIRONMENT: 'Development'
          ASPNETCORE_URLS: 'http://0.0.0.0:5000'
          TRAMS_API_BASE: ${{ secrets.E2E_TRAMS_API_BASE }}
          TRAMS_API_KEY: ${{ secrets.E2E_TRAMS_API_KEY }}
          REDIS_URL: redis://user:password@redis:6379

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: end-to-end-tests

    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      
      - name: setup node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      
      - name: Npm install
        run: npm install
      
      - name: Verify logs
        run: docker logs "${{ job.services.web-app.id }}"

      - name: Run tests
        run: npm run cypress:run
        env:
          CYPRESS_BASE_URL: http://localhost:5000

@using Frontend.Helpers
@using Data.Models.Projects
@using Helpers
@model BenefitsViewModel

@{

    ViewBag.Title = Model.FormErrors.ProcessPageTitleIfThereIsAnError("What are the benefits the transfer intended to bring?");
    Layout = "_Layout";
    var formClasses = Model.FormErrors.FormClassesForField("intendedBenefits");
    var otherBenefitFormClasses = Model.FormErrors.FormClassesForField("otherBenefit");
}

@section BeforeMain
{
    <backtopreview id="@Model.Project.Urn" return-to-preview="@Model.ReturnToPreview">
        <a class="govuk-back-link" asp-action="Index" asp-route-urn="@Model.Project.Urn">Back</a>
    </backtopreview>
}

@await Html.PartialAsync("_FormErrorSummary", Model.FormErrors)

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <form asp-action="IntendedBenefits" method="post" novalidate="">
            <input name="returnToPreview" value="@Model.ReturnToPreview.ToString()" hidden />
            <div class="govuk-form-group @formClasses @otherBenefitFormClasses">
                <fieldset class="govuk-fieldset" aria-describedby="intended-benefits-hint">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                        <h1 class="govuk-fieldset__heading">
                            <span class="govuk-caption-l">
                                @Model.Project.OutgoingAcademyName
                            </span>
                            What are the benefits the transfer intended to bring?
                        </h1>
                    </legend>
                    <div id="intended-benefits-hint" class="govuk-hint">
                        Select all that apply.
                    </div>

                    @if (Model.FormErrors.HasErrorForField("intendedBenefits"))
                    {
                        <span id="intended-benefits-error" class="govuk-error-message">
                            <span class="govuk-visually-hidden">Error:</span> @Model.FormErrors.ErrorForField("intendedBenefits").ErrorMessage
                        </span>
                    }

                    <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                        @foreach (var intendedBenefit in EnumHelpers<TransferBenefits.IntendedBenefit>.GetDisplayableValues(TransferBenefits.IntendedBenefit.Empty))
                        {
                            <div class="govuk-checkboxes__item">
                                <input class="govuk-checkboxes__input" id="@intendedBenefit.ToString()" name="intendedBenefits" type="checkbox" value="@intendedBenefit.ToString()" checked="@Model.Project.Benefits.IntendedBenefits.Contains(intendedBenefit)">
                                <label class="govuk-label govuk-checkboxes__label" for="@intendedBenefit.ToString()">
                                    @{
                                        var displayValue = EnumHelpers<TransferBenefits.IntendedBenefit>.GetDisplayValue(intendedBenefit);
                                        @displayValue
                                    }
                                </label>
                            </div>
                        }

                        @{
                            var otherBenefit = TransferBenefits.IntendedBenefit.Other.ToString();
                        }

                        <div class="govuk-checkboxes__item">
                            <input class="govuk-checkboxes__input" id="@otherBenefit" name="intendedBenefits" type="checkbox" value="@otherBenefit" aria-controls="conditional-other-benefit" aria-expanded="false" checked="@Model.Project.Benefits.IntendedBenefits.Contains(TransferBenefits.IntendedBenefit.Other)">
                            <label class="govuk-label govuk-checkboxes__label" for="@otherBenefit">
                                Add an other benefit
                            </label>
                        </div>
                        <div class="govuk-checkboxes__conditional govuk-checkboxes__conditional--hidden" id="conditional-other-benefit">
                            <div class="govuk-form-group">
                                <label class="govuk-label" for="otherBenefit">
                                    Enter the benefit
                                </label>

                                @if (Model.FormErrors.HasErrorForField("otherBenefit"))
                                {
                                    <span id="other-benefit-error" class="govuk-error-message">
                                        <span class="govuk-visually-hidden">Error:</span> @Model.FormErrors.ErrorForField("otherBenefit").ErrorMessage
                                    </span>
                                }

                                <input class="govuk-input govuk-!-width-two-thirds" id="otherBenefit" name="otherBenefit" type="text" spellcheck="false">
                            </div>
                        </div>
                    </div>
                </fieldset>
            </div>
            <button class="govuk-button" data-module="govuk-button" type="submit">
                Save and continue
            </button>
        </form>
    </div>

    <div class="govuk-grid-column-one-third">
        <aside class="app-related-items" role="complementary">
            <h2 class="govuk-heading-s" id="subsection-title">
                Useful information
            </h2>
            <nav role="navigation" aria-labelledby="subsection-title">
                <ul class="govuk-list govuk-!-font-size-16">
                    <li>
                        <a class="govuk-link" href="#">
                            View full application
                        </a>
                    </li>
                    <li>
                        <a class="govuk-link" href="#">
                            School information on TRAMS
                        </a>
                    </li>
                    <hr class="govuk-grid-one-third govuk-section-break govuk-section-break--m govuk-section-break--visible">
                </ul>
            </nav>
            <h2 class="govuk-heading-s" id="subsection-title">
                Guidance
            </h2>
            <nav role="navigation" aria-labelledby="subsection-title">
                <ul class="govuk-list govuk-!-font-size-16">
                    <li>
                        <a class="govuk-link" href="#">
                            Guidance for setting an Advisory Board date
                        </a>
                    </li>
                    <li>
                        <a class="govuk-link" href="#">
                            Full Guidance
                        </a>
                    </li>
                </ul>
            </nav>
        </aside>
    </div>
</div>